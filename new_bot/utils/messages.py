from typing import List
from datetime import datetime
from new_bot.types import Training

def create_schedule_message(trainings: List[Training], admins_map: dict) -> str:
    if not trainings:
        return "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"

    message = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:\n"
    
    for training in trainings:
        message += f"- {training.date_time.strftime('%Y-%m-%d %H:%M')} | "
        message += f"{training.kind} | {training.duration} –º–∏–Ω—É—Ç | "
        message += f"{training.location} | "
        message += f"üí∞ {training.price}‚ÇΩ | "
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        from new_bot.database.trainer import TrainerDB
        trainer_db = TrainerDB(admins_map.get(training.id))
        current_participants = len(trainer_db.get_participants_by_training_id(training.id))
        message += f"–£—á–∞—Å—Ç–Ω–∏–∫–∏: {current_participants}/{training.max_participants} | "
        message += f"–ó–∞–ø–∏—Å—å {'–û—Ç–∫—Ä—ã—Ç–∞' if training.status == 'OPEN' else '–ó–∞–∫—Ä—ã—Ç–∞'}\n"
    
    return message