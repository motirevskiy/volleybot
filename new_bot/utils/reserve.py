from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from new_bot.database.trainer import TrainerDB
from new_bot.database.admin import AdminDB
from new_bot.database.channel import ChannelDB

admin_db = AdminDB()
channel_db = ChannelDB()

def offer_spot_to_reserve(training_id: int, admin_username: str, bot):
    """–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –º–µ—Å—Ç–æ —Å–ª–µ–¥—É—é—â–µ–º—É –≤ —Ä–µ–∑–µ—Ä–≤–µ"""
    trainer_db = TrainerDB(admin_username)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤ —Ä–µ–∑–µ—Ä–≤–µ
    if next_username := trainer_db.offer_spot_to_next_in_reserve(training_id):
        if user_id := admin_db.get_user_id(next_username):
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ
            training = trainer_db.get_training_details(training_id)
            if not training:
                return
                
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
            group = channel_db.get_channel(training.channel_id)
            if not group:
                return
            
            # –£–¥–∞–ª—è–µ–º –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫
            trainer_db.remove_from_reserve(next_username, training_id)
            trainer_db.execute_query('''
                INSERT INTO participants (username, training_id, status, signup_time)
                VALUES (?, ?, 'RESERVE_PENDING', datetime('now'))
            ''', (next_username, training_id))
            
            markup = InlineKeyboardMarkup()
            markup.row(
                InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"accept_reserve_{training_id}"),
                InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data=f"decline_reserve_{training_id}")
            )
            
            notification = (
                "üéâ –û—Å–≤–æ–±–æ–¥–∏–ª–æ—Å—å –º–µ—Å—Ç–æ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ!\n\n"
                f"üë• –ì—Ä—É–ø–ø–∞: {group[1]}\n"
                f"üìÖ –î–∞—Ç–∞: {training.date_time.strftime('%d.%m.%Y %H:%M')}\n"
                f"üèãÔ∏è‚Äç‚ôÇÔ∏è –¢–∏–ø: {training.kind}\n"
                f"üìç –ú–µ—Å—Ç–æ: {training.location}\n\n"
                "–£ –≤–∞—Å –µ—Å—Ç—å 2 —á–∞—Å–∞, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É—á–∞—Å—Ç–∏–µ"
            )
            try:
                bot.send_message(user_id, notification, reply_markup=markup)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –≤ —Ñ–æ—Ä—É–º–µ
                if topic_id := trainer_db.get_topic_id(training_id):
                    from new_bot.utils.forum_manager import ForumManager
                    forum_manager = ForumManager(bot)
                    participants = trainer_db.get_participants_by_training_id(training_id)
                    forum_manager.update_participants_list(training, participants, topic_id, trainer_db)
                
                return True
            except Exception as e:
                print(f"Error notifying reserve user {next_username}: {e}")
                # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤ —Ä–µ–∑–µ—Ä–≤
                trainer_db.execute_query(
                    "DELETE FROM participants WHERE username = ? AND training_id = ?",
                    (next_username, training_id)
                )
                trainer_db.add_to_reserve(next_username, training_id)
    return False 