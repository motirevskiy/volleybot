from typing import List
from telebot.types import Message
from new_bot.config import CHANNEL_ID
from new_bot.types import Training
from new_bot.utils.messages import format_participant
from new_bot.database.trainer import TrainerDB

class ForumManager:
    def __init__(self, bot):
        self.bot = bot
        self.chat_id = CHANNEL_ID  # ID –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —á–∞—Ç–∞

    def create_training_topic(self, training: Training, admin_username: str) -> int:
        """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Ç–µ–º—É –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ —Ñ–æ—Ä—É–º–µ"""
        topic_name = (
            f"üèãÔ∏è‚Äç‚ôÇÔ∏è {training.kind} | "
            f"üìÖ {training.date_time.strftime('%d.%m.%Y %H:%M')} | "
            f"üìç {training.location}"
        )
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–µ–º—É –≤ —Ñ–æ—Ä—É–º–µ
        result = self.bot.create_forum_topic(
            self.chat_id,
            name=topic_name,
            icon_color=0x6FB9F0  # –ì–æ–ª—É–±–æ–π —Ü–≤–µ—Ç –¥–ª—è —Ç–µ–º
        )
        return result.message_thread_id

    def send_training_announcement(self, training: Training, admin_username: str, topic_id: int) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ –≤ —Ç–µ–º—É"""
        message = (
            f"üÜï –ù–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç @{admin_username}!\n\n"
            f"üìÖ –î–∞—Ç–∞: {training.date_time.strftime('%d.%m.%Y %H:%M')}\n"
            f"üèãÔ∏è‚Äç‚ôÇÔ∏è –¢–∏–ø: {training.kind}\n"
            f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {training.duration} –º–∏–Ω—É—Ç\n"
            f"üìç –ú–µ—Å—Ç–æ: {training.location}\n"
            f"üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {training.price}‚ÇΩ\n"
            f"üë• –ú–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {training.max_participants}\n"
            f"üìù –°—Ç–∞—Ç—É—Å: {'–û—Ç–∫—Ä—ã—Ç–∞' if training.status == 'OPEN' else '–ó–∞–∫—Ä—ã—Ç–∞'}"
        )
        self.bot.send_message(
            self.chat_id,
            message,
            message_thread_id=topic_id
        )

    def update_participants_list(self, training: Training, participants: List[str], topic_id: int, trainer_db) -> None:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ç–µ–º–µ"""
        message = (
            f"–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:\n"
            f"–î–∞—Ç–∞: {training.date_time.strftime('%d.%m.%Y %H:%M')}\n"
            f"–¢–∏–ø: {training.kind}\n"
            f"–ú–µ—Å—Ç–æ: {training.location}\n\n"
            f"–£—á–∞—Å—Ç–Ω–∏–∫–∏ ({len(participants)}/{training.max_participants}):\n"
        )
        
        for i, username in enumerate(participants, 1):
            paid_status = trainer_db.get_payment_status(username, training.id)
            invite_status = trainer_db.get_invite_status(username, training.id)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            invite = trainer_db.fetch_one('''
                SELECT status FROM invites 
                WHERE username = ? AND training_id = ? 
                AND status = 'PENDING'
                AND invite_timestamp > datetime('now', '-1 hour')
                ORDER BY invite_timestamp DESC
                LIMIT 1
            ''', (username, training.id))
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            if invite:  # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
                status = "‚è≥"  # –û–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞
            elif paid_status == 2:
                status = "‚úÖ"  # –û–ø–ª–∞—á–µ–Ω–æ
            else:
                status = ""   # –ù–µ—Ç –ø–æ–º–µ—Ç–∫–∏
            
            message += f"{i}. {status} @{username}\n"
            
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–∑–µ—Ä–≤–∞
        reserve_list = trainer_db.get_reserve_list(training.id)
        if reserve_list:
            message += "\nüìã –†–µ–∑–µ—Ä–≤:\n"
            for username, position, status in reserve_list:
                status_emoji = {
                    'WAITING': "",
                    'OFFERED': "‚è≥",
                    'DECLINED': ""
                }
                message += f"{position}. {status_emoji[status]} @{username}\n"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
        try:
            self.bot.send_message(
                self.chat_id,
                message,
                message_thread_id=topic_id
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {e}")

    def send_training_update(self, training: Training, topic_id: int, update_type: str) -> None:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
        if update_type == "open":
            message = "üü¢ –û—Ç–∫—Ä—ã—Ç–∞ –∑–∞–ø–∏—Å—å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!"
            # –ü—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ–∑ [–ó–ê–ö–†–´–¢–û]
            new_topic_name = (
                f"üèãÔ∏è‚Äç‚ôÇÔ∏è {training.kind} | "
                f"üìÖ {training.date_time.strftime('%d.%m.%Y %H:%M')} | "
                f"üìç {training.location}"
            )
            try:
                self.bot.edit_forum_topic(
                    self.chat_id,
                    topic_id,
                    name=new_topic_name
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º—ã: {e}")
                
        elif update_type == "close":
            message = "üî¥ –ó–∞–ø–∏—Å—å –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –∑–∞–∫—Ä—ã—Ç–∞"
            # –ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –¥–æ–±–∞–≤–ª—è–µ–º [–ó–ê–ö–†–´–¢–û]
            new_topic_name = (
                f"[–ó–ê–ö–†–´–¢–û] üèãÔ∏è‚Äç‚ôÇÔ∏è {training.kind} | "
                f"üìÖ {training.date_time.strftime('%d.%m.%Y %H:%M')} | "
                f"üìç {training.location}"
            )
            try:
                self.bot.edit_forum_topic(
                    self.chat_id,
                    topic_id,
                    name=new_topic_name
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º—ã: {e}")
                
        elif update_type == "edit":
            # –ü—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç—É—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
            new_topic_name = (
                f"üèãÔ∏è‚Äç‚ôÇÔ∏è {training.kind} | "
                f"üìÖ {training.date_time.strftime('%d.%m.%Y %H:%M')} | "
                f"üìç {training.location}"
            )
            if training.status != 'OPEN':
                new_topic_name = f"[–ó–ê–ö–†–´–¢–û] {new_topic_name}"
                
            try:
                self.bot.edit_forum_topic(
                    self.chat_id,
                    topic_id,
                    name=new_topic_name
                )
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–µ–º—ã: {e}")
            
            message = (
                f"üìù –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞:\n"
                f"üìÖ –î–∞—Ç–∞: {training.date_time.strftime('%d.%m.%Y %H:%M')}\n"
                f"üèãÔ∏è‚Äç‚ôÇÔ∏è –¢–∏–ø: {training.kind}\n"
                f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {training.duration} –º–∏–Ω—É—Ç\n"
                f"üìç –ú–µ—Å—Ç–æ: {training.location}\n"
                f"üë• –ú–∞–∫—Å–∏–º—É–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {training.max_participants}"
            )
        
        self.bot.send_message(
            self.chat_id,
            message,
            message_thread_id=topic_id
        )

    def format_participant(self, username: str, training_id: int, trainer_db: TrainerDB) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞"""
        paid_status = trainer_db.get_payment_status(username, training_id)
        invite_status = trainer_db.get_invite_status(username, training_id)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        invite = trainer_db.fetch_one('''
            SELECT status FROM invites 
            WHERE username = ? AND training_id = ? 
            AND status = 'PENDING'
            AND invite_timestamp > datetime('now', '-1 hour')
            ORDER BY invite_timestamp DESC
            LIMIT 1
        ''', (username, training_id))
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        if invite:  # –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
            status = "‚è≥"  # –û–∂–∏–¥–∞–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–∑ —Ä–µ–∑–µ—Ä–≤–∞
        elif paid_status == 2:
            status = "‚úÖ"  # –û–ø–ª–∞—á–µ–Ω–æ
        else:
            status = ""   # –ù–µ—Ç –ø–æ–º–µ—Ç–∫–∏
        
        return (
            f"{status} @{username}"
        )