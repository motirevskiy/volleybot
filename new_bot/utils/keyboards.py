from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Tuple, Union
from datetime import datetime
from new_bot.types import Training

def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"""
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("üìã –ú–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏", callback_data="my_trainings"),
        InlineKeyboardButton("üìä –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="get_schedule"),
    )
    markup.add(InlineKeyboardButton("üé´ –ê–≤—Ç–æ–∑–∞–ø–∏—Å—å", callback_data="auto_signup"))
    markup.add(InlineKeyboardButton("üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", callback_data="sign_up_training"))
    markup.add(InlineKeyboardButton("üë• –ó–∞–ø–∏—Å–∞—Ç—å –¥—Ä—É–≥–∞", callback_data="invite_friend"))
    markup.add(InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", callback_data="get_admin"))
    markup.add(InlineKeyboardButton("–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏", callback_data="cancel_message_sign_up"))
    return markup

def get_trainings_keyboard(
    trainings: Union[List[Tuple[int, str, str, str]], List[Training]], 
    action: str
) -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    for training in trainings:
        if isinstance(training, Training):
            training_id = training.id
            date_time = training.date_time.strftime('%Y-%m-%d %H:%M')
            training_kind = training.kind
            location = training.location
        else:
            training_id = training[0]
            date_time = training[1]
            training_kind = training[2]
            location = training[3]

        button_text = f"{date_time} | {training_kind} | {location}"

        callback_data = f"{action}_{training_id}"
            
        markup.add(InlineKeyboardButton(button_text, callback_data=callback_data))
    
    return markup

def get_admin_list_keyboard(admins: List[Tuple[str]]) -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    for admin in admins:
        markup.add(InlineKeyboardButton(f"–£–¥–∞–ª–∏—Ç—å {admin[0]}", callback_data=f"remadm_{admin[0]}"))
    return markup

def get_confirm_keyboard() -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_clear"))
    markup.add(InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="cancel"))
    return markup

def get_training_keyboard(training_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∑–∞–ø–∏—Å–∏/–æ—Ç–º–µ–Ω—ã"""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data=f"signup_{training_id}"))
    markup.add(InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å", callback_data=f"cancel_{training_id}"))
    return markup

def get_user_trainings_keyboard(trainings: List[Training], admin_username: str) -> InlineKeyboardMarkup:
    markup = InlineKeyboardMarkup()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    markup.add(InlineKeyboardButton(
        "üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã",
        callback_data="show_payment_details"
    ))
    
    for training in trainings:
        training_text = (
            f"{training.date_time.strftime('%Y-%m-%d %H:%M')} | "
            f"{training.kind} | {training.location}"
        )
        markup.add(InlineKeyboardButton(training_text, callback_data=f"training_{training.id}"))
    
    return markup 